{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","class","src","data-image-width","data-image-height","id","AboutPage","ArticlesList","articles","className","map","article","key","to","name","responsive","image","alt","title","ingredients","content","ArticlesListPage","articleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","background","backgroundSize","item","i","style","NavBar","App","path","component","exact","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6567b735.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n    <>\n   \n <section class=\"u-align-left u-clearfix u-image u-section-1\" src=\"\" data-image-width=\"1280\" data-image-height=\"1015\" id=\"carousel_f9e6\">\n      <div class=\"u-clearfix u-sheet u-valign-middle u-sheet-1\">\n        <div class=\"u-align-center u-container-style u-group u-opacity u-opacity-60 u-shape-rectangle u-white u-group-1\">\n          <div class=\"u-container-layout u-container-layout-1\">\n            <h1 class=\"u-custom-font u-text u-text-custom-color-4 u-title u-text-1\">Recipes</h1>\n            <h1 class=\"u-custom-font u-text u-text-custom-color-1 u-title u-text-2\">Eat Healthy</h1>\n            <h1 class=\"u-custom-font u-text u-text-custom-color-2 u-title u-text-3\">Stay Healthy</h1>\n          </div>\n        </div>\n      </div>\n    </section>\n    \n    \n    \n       </>\n);\n\nexport default HomePage;","import React from 'react';\n\nconst AboutPage = () => (\n    <>\n    <h1>About</h1>\n    <p>\n        Welcome to recipe blog! Checkout easy, delicous ÃŸand healthy recipes posted on this site. You are welcome to like and comment on each recipes.the most important meal of the day should be healthy and well balanced having all the dietary nutrients like carbohydrates, proteins, vitamins and essential minerals. Try to plan ahead so that your work is easier during the busy morning hours. You can even prep the night before so that you can easily make breakfast for your entire family. the most important meal of the day should be healthy and well balanced having all the dietary nutrients like carbohydrates, proteins, vitamins and essential minerals. \n        \n         \n    </p>\n    \n    </>\n);\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './articlelist.css'\n\nvar background = {backgroundSize : 'cover'};\n\nconst ArticlesList = ({ articles }) => (\n    <>\n   <div className=\"row\">\n       \n    {articles.map((article, key) => (\n        <Link className =\"article-list-item\"key={key} to={`/article/${article.name}`}>\n           \n           <div className=\"column\">\n\n\n            <div className=\"card\">\n            <img className= \"photo1\" responsive src={article.image}  alt=\"\"></img>\n            <p>{article.title}</p>\n          \n          </div >\n          </div>\n\n          \n          </Link>\n    ))}\n</div>\n</>\n);\n\nexport default ArticlesList;","const articles = [\n    {\n        name: 'recipe1',\n        title: 'Chicken Lettuce Wraps',\n        image:[\"https://pinchofyum.com/wp-content/uploads/chopped-thai-shrimp-salad-1-2.jpg\"],\n        ingredients:[\"1.5 lbs chicken breast diced\",\n            \"1 small onion finely chopped\",\n            \"2 garlic cloves minced\",\n            \"1/2 inch knob ginger minced\",\n            \"1 small zucchini diced\",\n            \"1 small bell pepper diced\",\n            \"1 cup cashews coarsely chopped\",\n            \"2 green onion sprigs chopped\",\n            \"1/4 cup cold water\",\n            \"2 tbsp soy sauce I used aminos\",\n            \"2 tbsp maple syrup or honey\",\n            \"1 tbsp rice vinegar\",\n            \"1/2 tbsp cornstarch\",\n            \"1 head of butter iceberg or Romaine lettuce, leaves separated\",\n            \"1 tbsp avocado or any oil for frying\"],\n        content: [\n            \"Make sure all ingredients are chopped and ready\",\n           \" Preheat large ceramic non-stick skillet on medium heat and add cashews. Pan fry until toasted, stirring constantly. Transfer to a bowl and set aside\",\n           \" Return skillet to medium heat and swirl oil to coat. Add onion, garlic and ginger; cook for 1 minute, stirring constantly.\",\n            \"Add chicken and cook for 10 minutes, stirring occasionally.\",\n            \"Right before chicken is done cooking, in a small bowl add cold water, soy sauce, maple syrup, rice vinegar and cornstarch; whisk with a fork. Add to the chicken long with zucchini and bell pepper; cook for 1 minute or until sauce has thickened. Stir in cashews and green onions\",\n            \"Serve chicken lettuce wraps immediately. To assemble, use 2-3 stacked lettuce leaves (depending on its thickness) and spoon desired amount of filling on top. If someone is very hungry, serve over a bed of brown rice or quinoa.\",\n        ]\n    },    {\n        name: 'recipe2',\n        title: 'Carrot & lentil soup',\n        image:[\"https://images.immediate.co.uk/production/volatile/sites/30/2020/08/recipe-image-legacy-id-1074500_11-ee0d41a.jpg?quality=90&webp=true&resize=300,272\"],\n\n        ingredients:[\"1.5 lbs chicken breast diced\",\n            \"2 tsp cumin seeds\",\n            \"pinch chilli flakes\",\n            \"2 tbsp olive oil\",\n            \"600g carrots\",\n            \"140g split red lentils\",\n            \"1l hot vegetable stock\",\n            \"125ml milk \",\n            ],\n            content: [\n                \"Heat a large saucepan and dry-fry 2 tsp cumin seeds and a pinch of chilli flakes for 1 min, or until they start to jump around the pan and release their aromas.\",\n               \" Scoop out about half with a spoon and set aside. Add 2 tbsp olive oil, 600g coarsely grated carrots, 140g split red lentils, 1l hot vegetable stock and 125ml milk to the pan and bring to the boil.\",\n               \" Simmer for 15 mins until the lentils have swollen and softened.\",\n                \"Whizz the soup with a stick blender or in a food processor until smooth (or leave it chunky if you prefer).\",\n                \"Season to taste and finish with a dollop of plain yogurt and a sprinkling of the reserved toasted spices. Serve with warmed naan breads.\",\n            ]\n    },     {\n        name: 'recipe3',\n        title: 'Salmon with Vegetables',\n        image:[\"https://www.lecremedelacrumb.com/wp-content/uploads/2017/03/teriyaki-salmon-vegetables-102.jpg\"],\n\n        ingredients:[\"2 to 4 teaspoons olive oil\",\n            \"1 yellow potato (6 ounces), very thinly sliced\",\n            \"1/4 teaspoon salt\",\n            \"1/8 teaspoon pepper\",\n            \"2 handfuls (4 ounces) fresh sugar snap peas, ends trimmed\",\n            \"12 to 16 cherry tomatoes, halved\",\n            \"2 teaspoons lime juice\",\n            \"2 (6-ounce) skinless salmon fillets\",\n            ],\n        content: [\n            \"Make sure all Preheat the oven to 375oF\",\n           \" In a small bowl, stir the mayonnaise, harissa paste, honey, and lime juice\",\n           \" Brush the face-up side of the foil with 1 teaspoon of oil\",\n            \"Arrange half the potatoes on the oiled side of the foil and sprinkle with a pinch of salt and a pinch of pepper.\",\n        \"Place half the snap peas over the potatoes, followed by half the cherry tomatoes. Sprinkle lightly with salt and pepper, and drizzle with 1 teaspoon oil\",\n        \"Fold the foil over the fish so the ends meet. Fold all three open sides to make a border of about 1 inch, and crimp them to tightly seal the packet\"\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\n\nconst ArticlesListPage = () => (\n    <>\n    <h1>Explore Delicous RECIPES</h1>\n    <ArticlesList articles={articleContent} />\n    </>\n);\n\nexport default ArticlesListPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/recipe/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\n            <p>This post has been upvoted {upvotes} times</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/recipe/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({ username, text: commentText }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <div id=\"add-comment-form\">\n            <h3>Add a Comment</h3>\n            <label>\n                Name:\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n            </label>\n            \n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n            </label>\n            <button onClick={() => addComment()}>Add Comment</button>\n        </div>\n    );\n}\n\nexport default AddCommentForm;","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);\n\nexport default NotFoundPage;","import React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport '../App.css'\nimport NotFoundPage from './NotFoundPage';\nimport articleContent from './article-content';\nimport { ImageOverlay } from 'react-image-overlay-effect'\n\nconst ArticlePage = ({ match }) => {\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 1, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/recipe/${name}`);\n            const body = await result.json();\n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n    var background = {backgroundSize : 'cover'};\n    var textStyle = {\n      position: 'absolute', \n      top: '50%', \n      left: '50%'\n    };\n\n    return (\n       \n        <>\n        <h1>{article.title}</h1>\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n        \n        <br/>\n        \n        <ul className=\"ingredients\">\n          <h3 className=\"ing\">Ingredients</h3>\n          <br/>\n        {article.ingredients.map((item, i) => {\n          return <li key={i}>{item}</li>\n        })}\n        </ul>\n        <br/>\n        <div className=\"container\">\n        {article.image.map((item, i) => {\n          return (<img className= \"photo\" style={background} responsive src={item} alt=\"\"></img>\n            )\n        })}\n<div className=\"centered\">\n         <ul className=\"inst\">\n        <h3 className=\"instruction\">Instructions</h3>\n        <br/>\n        {article.content.map((item, i) => {\n          return (<li key={i}>{item}</li>\n            )\n        })}\n        <br/>\n        </ul>\n        </div>\n\n        </div>\n\n        \n      \n        \n        \n        <CommentsList comments={articleInfo.comments} />\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n        <h3>Other Recipes:</h3>\n        <ArticlesList articles={otherArticles} />\n        </>\n    );\n}\n\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li className>\n                <Link to=\"/\">HOME</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">ABOUT</Link>\n            </li>\n            <li>\n                <Link to=\"/recipes-list\">RECIPES</Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/recipes-list\" component={ArticlesListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}